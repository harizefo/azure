{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
	"customVmName": {
	    "type": "string",
	    "defaultValue": "server-ws",
	    "metadata": {
		"description": "This is the name of the your VM"
	    }
	},
	"userImageStorageAccountName": {
	    "type": "string",
	    "defaultValue": "serverlb",
	    "metadata": {
		"description": "This is the name of the your storage account"
	    }
	},
	"osDiskVhdUri": {
	    "type": "string",
	    "defaultValue": "",
	    "metadata": {
		"description": "Uri of the your user image"
	    }
	},
	"sizeOfDataDiskInGB": {
	    "type": "string",
	    "metadata": {
		"description": "Size of each data disk in GB"
	    },
	    "defaultValue": "10"
	},
	"dnsLabelPrefix": {
	    "type": "string",
	    "defaultValue": "server-ws",
	    "metadata": {
		"description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
	    }
	},
	"adminUserName": {
	    "type": "string",
	    "metadata": {
		"description": "User Name for the Virtual Machine"
	    },
	    "defaultValue": "nameofuser"
	},
	"sshKeyData": {
	    "type": "string",
	    "metadata": {
		"description": "SSH rsa public key file as a string."
	    },
	    "defaultValue":"sshKeyData"
	},
	"osType": {
	    "type": "string",
	    "allowedValues": [
		"Windows",
		"Linux"
	    ],
	    "defaultValue": "Linux",
	    "metadata": {
		"description": "This is the OS that your VM will be running"
	    }
	},
	"vmSize": {
	    "type": "string",
	    "defaultValue": "Basic_A4",
	    "metadata": {
		"description": "This is the size of your VM"
	    }
	},
	"newOrExistingVnet": {
	    "allowedValues": [ "new", "existing" ],
	    "type": "string",
	    "defaultValue": "existing",
	    "metadata": {
		"description":  "Select if this template needs a new VNet or will reference an existing VNet"
	    }
	},
	"newOrExistingVnetName": {
	    "type": "string",
	    "defaultValue": "betalbmacvnet",
	    "metadata": {
		"description": "New or Existing VNet Name"
	    }
	},
	"newOrExistingSubnetName": {
	    "type": "string",
	    "defaultValue": "betalbmacsubnet",
	    "metadata": {
		"description": "Subnet Name"
	    }
	}
    },
    "variables": {
	"publicIPAddressName": "[concat(parameters('customVmName'),'IP')]",
	"vmName": "[parameters('customVmName')]",
	"nicName": "[concat(parameters('customVmName'),'Nic')]",
	"publicIPAddressType": "Dynamic",
	"apiVersion": "2015-06-15",
	"templatelink": "[concat('https://raw.githubusercontent.com/azure/azure-quickstart-templates/master/101-vm-from-user-image/',parameters('newOrExistingVnet'),'vnet.json')]",
	"sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]"
    },
    "resources": [
	{
            "apiVersion": "2015-01-01",
            "name": "vnet-template",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('templatelink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('newOrExistingVnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('newOrExistingSubnetName')]"
                    }
                }
            }
        },
	{
	    "apiVersion": "[variables('apiVersion')]",
	    "type": "Microsoft.Network/publicIPAddresses",
	    "name": "[variables('publicIPAddressName')]",
	    "location": "[resourceGroup().location]",
	    "properties": {
		"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
		"dnsSettings": {
		    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
		}
	    }
	},
	{
	    "apiVersion": "2016-03-30",
	    "type": "Microsoft.Network/networkInterfaces",
	    "name": "[variables('nicName')]",
	    "location": "[resourceGroup().location]",
	    "dependsOn": [
		"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
		"Microsoft.Resources/deployments/vnet-template"
	    ],
	    "properties": {
		"ipConfigurations": [
		    {
			"name": "ipconfig1",
			"properties": {
			    "privateIPAllocationMethod": "Dynamic",
			    "publicIPAddress": {
				"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
			    },
			    "subnet": {
				"id": "[reference('vnet-template').outputs.subnet1Ref.value]"
			    }
			}
		    }
		]
	    }
	},
	{
	    "apiVersion": "[variables('apiVersion')]",
	    "type": "Microsoft.Compute/virtualMachines",
	    "name": "[variables('vmName')]",
	    "location": "[resourceGroup().location]",
	    "dependsOn": [
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
	    ],
	    "properties": {
		"hardwareProfile": {
		    "vmSize": "[parameters('vmSize')]"
		},
		"osProfile": {
		    "computerName": "[variables('vmName')]",
		    "adminUsername": "[parameters('adminUsername')]",
		    "linuxConfiguration": {
			"disablePasswordAuthentication": "true",
			"ssh": {
			    "publicKeys": [
				{
				    "path": "[variables('sshKeyPath')]",
				    "keyData": "[parameters('sshKeyData')]"
				}
			    ]
			}
		    }
		},
		"storageProfile": {
		    "osDisk": {
			"name": "[concat(variables('vmName'),'-osDisk')]",
			"osType": "[parameters('osType')]",
			"caching": "ReadWrite",
			"createOption": "FromImage",
			"image": {
			    "uri": "[parameters('osDiskVhdUri')]"
			},
			"vhd": {
			    "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('userImageStorageAccountName')), variables('apiVersion')).primaryEndpoints.blob, 'vhds/',variables('vmName'), uniquestring(resourceGroup().id), 'osDisk.vhd')]"
			}
		    },
		    "dataDisks": [
			{
			    "name": "basemongoimage-disk",
			    "diskSizeGB": "[parameters('sizeOfDataDiskInGB')]",
			    "lun": 0,
			    "vhd": {
				"uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('userImageStorageAccountName')), variables('apiVersion')).primaryEndpoints.blob, 'vhds','/',variables('vmName'), uniquestring(resourceGroup().id), 'dataDisk.vhd')]"
			    },
			    "createOption": "Empty"
			}
		    ]
		},
		"networkProfile": {
		    "networkInterfaces": [
			{
			    "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
			}
		    ]
		},
		"diagnosticsProfile": {
		    "bootDiagnostics": {
			"enabled": "true",
			"storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('userImageStorageAccountName')), variables('apiVersion')).primaryEndpoints.blob)]"
		    }
		}
	    }
	}
    ]
}
